//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.1.0
//     from Assets/_Project/Settings/Input/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Arcade
{
    public partial class @InputActions : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @InputActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""GlobalActions"",
            ""id"": ""dcef0966-dff4-49e7-a970-23d5259d1a82"",
            ""actions"": [
                {
                    ""name"": ""Quit"",
                    ""type"": ""Button"",
                    ""id"": ""d8177f08-24f3-4440-af5b-6cbb708553c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Toggle Cursor"",
                    ""type"": ""Button"",
                    ""id"": ""111e58fd-0332-48ec-a8c5-6a8f4028d3af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""71a3424e-444f-46f7-a84f-dff06c7d8d0c"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""92403178-6904-4c3e-bd0a-553260b9b699"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18a59c22-2410-49a6-b201-848edb236c4e"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Toggle Cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82d02491-296f-44c7-b295-9203ba7e8bb3"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Toggle Cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ee846d6-4a8e-491a-af01-c96c7c9e00c1"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Toggle Cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""FpsActions"",
            ""id"": ""22122fb4-ab81-4a29-9a20-1efdb89252ad"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""9e3d2a7f-4e36-413f-a0db-967f82c11f2f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""c4a091c0-183c-4683-bd92-688cb76a48d0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Camera Height"",
                    ""type"": ""Value"",
                    ""id"": ""a90ee00d-75ff-4601-85ad-c4ce6914610c"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""8de635a7-b295-43d9-b05f-89daa55015c8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Value"",
                    ""id"": ""5786bc8b-1bdb-410d-8fce-1efa022cc1d5"",
                    ""expectedControlType"": ""Digital"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""f8f41772-c9a4-4700-9873-67ca7da3cdf0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Toggle EditMode"",
                    ""type"": ""Button"",
                    ""id"": ""c3ac06ce-bcb9-4007-b358-0e03157f5c46"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WSAD"",
                    ""id"": ""acf59875-e049-48c7-a28a-744b5b337ca9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""65f115c7-f132-43a4-88df-b6d93bc2789f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""18c43523-0b1c-4653-b74f-319a6d4f87db"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""22e04564-028a-42c3-9c72-9ea9ca8195d5"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3ea590fd-28cd-40a2-ade7-a4d716c8e467"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""b1bedf90-557c-42a3-815a-b4f2deaab53f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b817b16a-6c66-4ba9-af1b-6951709c5ab6"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""77e8eee0-b398-4c10-a586-737f27d84f6e"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""51ea1253-0afa-4851-af30-fea86a493324"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""76ad32ba-a9c5-4991-be62-43a851579e78"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""eca59f9b-0916-4aae-ba8b-e1728489a66a"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""979699a5-0170-472e-b44c-55f7930528bd"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""RFAE"",
                    ""id"": ""5bc352fa-37c6-428f-b639-dce6f5a7151f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0ed4de18-42e8-4f43-a942-a5347f5bcca5"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9f363d4e-ac8b-4e7d-8ca8-1dc4f28f39c0"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7d12984a-74ab-4dc8-b361-a1636b370eca"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fb2726d9-80d1-4706-b072-d261c0d8b76a"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""167049f4-9b46-4dba-9f98-621ae2c93be9"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8be74ff5-e143-46a3-8557-c470a5dbc5f2"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6075b4c4-c227-4352-817a-fb79a1d2fd17"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b8f287e-136d-4a76-a1bd-b1d930366911"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d6d2fec-43dd-4b65-ad81-5e0d762f8932"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23902d4e-e621-4abd-a958-022bff195241"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Toggle EditMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c8a668ba-0a38-4d76-b692-b8fe5c53c28f"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Toggle EditMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""TG"",
                    ""id"": ""79870c4d-fadb-4cdb-a403-73c0ac0769c9"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Height"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""f307a84c-c441-4477-9b8b-b899be2ad6b2"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Camera Height"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""dd3eb91e-9fbc-4c81-ac07-0e1bbfd9e71e"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Camera Height"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""DPad"",
                    ""id"": ""f3b06e97-b2db-43a2-96ef-5a12f1382aa7"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Height"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""a15d2d42-7acb-4f96-9a64-f0fdcdcfcf5c"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Camera Height"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""4592d88f-b596-43a1-9b33-0bad3cd34d04"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Camera Height"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a992bda7-e0a9-4b5f-9258-4f48b27434e3"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20db50ba-9db8-4968-b4fd-b8259ce69367"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bccf0dca-76f0-4960-9e54-0dbf8103b620"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""FpsEditActions"",
            ""id"": ""826403ab-f082-4a58-8a51-3a726b972945"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""3c404557-4b9e-4d5c-b5ef-b2e19649b1d5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Rotate"",
                    ""type"": ""Value"",
                    ""id"": ""5bd2bcf2-81e7-487d-a7bb-9efd6a463306"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Grab"",
                    ""type"": ""Button"",
                    ""id"": ""da98b889-a257-4260-bdb7-c2d25d037c14"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""IKJL"",
                    ""id"": ""e2dbf37a-fe69-4f24-907b-785db15190c5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b0ee920e-807b-4a67-a268-5ae3d1cd35cb"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6aab8201-b777-408d-a0cc-1bf61d49b99d"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d22e5217-f071-4ce6-9b1c-6f543611f61e"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fcc18843-1103-4a63-b59e-375348100c0b"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a32c1c88-d8b1-4753-b208-b49d17aac77b"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""UO"",
                    ""id"": ""405e8f8e-765a-4380-be52-32c34ebee78c"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""5b6b77dd-c8b5-4336-88aa-3e986721dfde"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""267ba5e7-001a-4917-a6c9-7ad831e33a53"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Shoulders"",
                    ""id"": ""341a6c34-3c4a-45be-a2fe-b950191f5f2b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""c8fd3857-6235-4e6a-9c95-c5420b95dc87"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""645fdfac-6ae9-4d08-b2b1-2c2c6b2be365"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0990e09d-e138-4b42-8abe-72a9e4b5a367"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Grab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6741b1b1-5301-4dc5-81f1-d07abd193117"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Grab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""803e54e5-a269-486a-aa6a-8789717c70f5"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Grab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CylActions"",
            ""id"": ""cee92ad0-24ac-4ae8-b5bb-9fd31a285831"",
            ""actions"": [
                {
                    ""name"": ""Navigation Vertical"",
                    ""type"": ""Value"",
                    ""id"": ""e1f0c0ad-badd-44d1-a958-cb657e58637d"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Navigation Horizontal"",
                    ""type"": ""Value"",
                    ""id"": ""ab61ee91-1a7d-471b-bc23-8f1c4a0e8260"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""ec7b6c22-2306-4be1-90de-d60a48c1f2bf"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Camera Height"",
                    ""type"": ""Value"",
                    ""id"": ""b794dfff-5179-436f-b532-d0afa18c37a8"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""5c66f33d-85c8-49d5-87ec-8b63f8ed1eee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WS"",
                    ""id"": ""05099181-0021-4413-8078-44e1c7ef9f1f"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigation Vertical"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""f3ade314-c401-40d7-9775-6eeb0cfd6c5a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Navigation Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""8d1c0ab6-fc80-4c8a-a037-8855f834cce3"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Navigation Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""8da28b44-fd4e-4869-9af8-293cf1218fee"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigation Vertical"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""725e64b4-65e6-4ef3-94ac-9c4d6f7582e1"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Navigation Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""4e166e49-4761-415c-a091-6581f34fced1"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Navigation Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left Stick"",
                    ""id"": ""8f73a6aa-397c-4b77-9b67-8c08db46c72a"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigation Vertical"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""089ee213-684e-4e55-9a13-2fd3a3ba25e7"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigation Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""20c36024-7d77-43dc-b64a-b6613a82f62a"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigation Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1868423f-1af1-4ae5-90e4-4c855df6bc04"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""RFAE"",
                    ""id"": ""928bd405-c860-4f27-aa41-02db7f658248"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c1a9e278-11cf-4338-9ed6-2f12f23ced36"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""65998c15-72ed-4441-879b-34098d1bc31e"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ad275b4f-d8d4-42f1-b3eb-3baee334cd01"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""dd0dc889-8276-4d2e-abc5-a33121c73045"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2a412500-fde2-47b3-bf9c-73f3027249c5"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""TG"",
                    ""id"": ""32782cf7-c276-4a78-90a2-f479766e39f4"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Height"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""0c3ced21-82b0-4fa9-8cd6-e40b12b063f0"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Camera Height"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""c6474c29-88d2-491f-b759-7a4f0b1de030"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Camera Height"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""DPad"",
                    ""id"": ""412ac7a8-42e3-4fc9-a11b-4fa7a0d6378c"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Height"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""b9a243ce-4ec4-4c94-bec7-4d1c78fc4ad5"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Camera Height"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""f5a9fba8-1b74-429c-bd3c-d3420808b02c"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Camera Height"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a4b979a9-91a6-4aed-bc66-9bab7490a5b5"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d8d3697-a117-4fb6-af5e-b2b848b5551b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7dc06803-7870-4a8d-bfef-33a7c084dd8f"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""AD"",
                    ""id"": ""b76e3822-8474-4c2b-a7e0-4e0790b92080"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigation Horizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""6a011495-7033-4d48-b7cb-48916ad4dc14"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Navigation Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d86cc60b-79a5-46f8-985e-2d8f3a95ed4b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Navigation Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""eccc8847-1486-49fb-b442-e1b0d66555b1"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigation Horizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""053853c8-3df8-4c1c-95f3-e72ce8cc5d4a"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Navigation Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""f6a65dc4-4309-47b9-88f4-595edfbaa098"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Navigation Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left Stick"",
                    ""id"": ""28430306-508e-46e6-8109-95035133f7b6"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigation Horizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""7f9762f5-77c1-4f27-93ac-2efb169650b7"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigation Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""f817b234-a513-4848-9537-cf005ff89bf3"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigation Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""XR HMD"",
            ""id"": ""3ef1d5fd-5116-4ab7-b27d-b0b8e039abe5"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""19d4887f-b1f5-415e-ae2f-91a5036b1f1d"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""50dd51b4-247b-489f-b9d3-23b6c4613fdc"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """"
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b16e2bce-c9e8-4eef-bfd2-6d2361963b60"",
                    ""path"": ""<XRHMD>/centerEyePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24f46e3b-391a-403c-a124-90ee68c4242d"",
                    ""path"": ""<XRHMD>/centerEyeRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""XR LeftHand"",
            ""id"": ""fc83f463-6ece-431d-a3dc-bc5a7037b404"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""93513888-a1b1-43a0-8791-441707b2ab7b"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""dc12d432-1ba4-4143-81b5-5b646d1c1526"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""581de343-cb0e-454f-80a0-5504cb829f32"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Activate"",
                    ""type"": ""Button"",
                    ""id"": ""33a58c50-eebe-4c9f-945c-e2fe2372e00e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""UI Press"",
                    ""type"": ""Button"",
                    ""id"": ""3361fda7-adaf-42df-a5b2-8498e9d1d77f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Haptic Device"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8075a64d-9492-4abb-951f-a93223108030"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Teleport Select"",
                    ""type"": ""Button"",
                    ""id"": ""d0ac2912-bd39-4e05-a741-359d3798ac67"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Teleport Mode Activate"",
                    ""type"": ""Button"",
                    ""id"": ""6dc5fc64-57e0-4aef-93c6-c2cfdd91e540"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Teleport Mode Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""3602aa4a-19e5-451f-ae2b-dbad5ca50e4c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Turn"",
                    ""type"": ""Value"",
                    ""id"": ""b0cadf9f-245b-49f1-a18b-aaef5d478d66"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""6574199f-ccbb-4a32-b579-4a6632b14cff"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Rotate Anchor"",
                    ""type"": ""Value"",
                    ""id"": ""ac222bf5-58e6-4627-a45c-218c06e04fb8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Translate Anchor"",
                    ""type"": ""Value"",
                    ""id"": ""3bfe1ec9-1aa2-4e6b-bfdb-3c79760a176b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7272fb59-7961-4f19-b5ef-0601309d218b"",
                    ""path"": ""<XRController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da89a240-df3c-42e2-a6fe-92cc154dfe55"",
                    ""path"": ""<XRController>{LeftHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9fcf08d8-3f67-4ec0-bf7e-78864231b556"",
                    ""path"": ""<XRController>{LeftHand}/Primary2DAxis"",
                    ""interactions"": ""Sector(directions=1)"",
                    ""processors"": """",
                    ""groups"": ""Noncontinuous Move"",
                    ""action"": ""Teleport Mode Activate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0a3169b-20af-4250-83e7-7c92efd93dbc"",
                    ""path"": ""<XRController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Teleport Mode Activate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb62709b-e23b-45ce-b8cb-a97a3c8ab307"",
                    ""path"": ""<XRController>{LeftHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Teleport Mode Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a96d3541-f36c-45c6-b9d5-42d45ce669b4"",
                    ""path"": ""<XRController>{LeftHand}/Primary2DAxis"",
                    ""interactions"": ""Sector(directions=-1,sweepBehavior=3)"",
                    ""processors"": """",
                    ""groups"": ""Noncontinuous Move"",
                    ""action"": ""Teleport Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""173cf454-df87-426b-ad01-930d91d8cd13"",
                    ""path"": ""<XRController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Teleport Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da608315-366a-411a-bf89-4ce485ea1d9a"",
                    ""path"": ""<XRController>{LeftHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a06911d-7902-4794-9af2-e80ee444acde"",
                    ""path"": ""<XRController>{LeftHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d04d4b6c-ecb5-497d-8dcc-b4c9cb8897a5"",
                    ""path"": ""<XRController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Activate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de6da4fc-cca7-4b58-89f0-a41a20b05de0"",
                    ""path"": ""<XRController>{LeftHand}/Primary2DAxis"",
                    ""interactions"": ""Sector(directions=12,sweepBehavior=1)"",
                    ""processors"": """",
                    ""groups"": ""Noncontinuous Move"",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4a21a02-c028-4e25-aa7e-e9f2a605193a"",
                    ""path"": ""<XRController>{LeftHand}/Primary2DAxis"",
                    ""interactions"": ""Sector(directions=2,sweepBehavior=2)"",
                    ""processors"": """",
                    ""groups"": ""Noncontinuous Move"",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0a6637a-a8cf-4a36-a02e-f1ead8541c25"",
                    ""path"": ""<XRController>{LeftHand}/Primary2DAxis"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": ""Continuous Move"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9148883d-088a-4539-8c4f-0d81c31adab8"",
                    ""path"": ""<XRController>{LeftHand}/*"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Haptic Device"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""02465f2a-3c99-4a9e-9138-1bc92b9abe98"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Rotate Anchor"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""af31f503-338e-4609-8732-c8e417845eb0"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""48919b7f-b410-48a0-981e-f13e10b8a81a"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d3656f07-e6fa-4b24-ad64-ac0adf1d095e"",
                    ""path"": ""<XRController>{LeftHand}/Primary2DAxis/x"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(min=-1),Invert"",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""eab0992d-d416-4a3e-9bb2-a37a119925df"",
                    ""path"": ""<XRController>{LeftHand}/Primary2DAxis/x"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(max=1)"",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""5125386d-99df-43bd-b418-a2b02e3180fd"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Translate Anchor"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7227bbab-a65c-4628-9c89-7289537a7dbc"",
                    ""path"": ""<XRController>{LeftHand}/Primary2DAxis/y"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(max=1)"",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Translate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""27135e96-7370-44c0-98a6-694abcb7032e"",
                    ""path"": ""<XRController>{LeftHand}/Primary2DAxis/y"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(min=-1),Invert"",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Translate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9da59415-1042-4d45-b879-5c78ba7b8f09"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Translate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""95394d4e-2550-48eb-82b0-1ade3b83e9a8"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Translate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""XR RightHand"",
            ""id"": ""d3b29710-08e6-4728-91a3-103bac2fab33"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""9e9f2128-16fb-4ae0-a08d-6aa2a1e962bd"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""3f0a538f-ee48-4720-ba69-6262d476f783"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""29b9889e-d2c0-42f7-9543-1e670d03b322"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Activate"",
                    ""type"": ""Button"",
                    ""id"": ""98941d17-b655-4a4f-9b65-ff45d7476199"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""UI Press"",
                    ""type"": ""Button"",
                    ""id"": ""31a8d336-0e33-4617-82f2-379ffa4943a8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Haptic Device"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a717e3d6-3494-4c96-9f6b-154b6c743572"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Teleport Select"",
                    ""type"": ""Button"",
                    ""id"": ""19dcd02a-1e4c-40e3-9673-1a8f2e402b7e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Teleport Mode Activate"",
                    ""type"": ""Button"",
                    ""id"": ""8383ffbe-3b6a-431c-92c0-89527480105b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Teleport Mode Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""beb06869-6079-4181-8f76-72b4317fffd0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Turn"",
                    ""type"": ""Value"",
                    ""id"": ""9fe1c452-8bb6-4cf9-a278-17704af7d69a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""85641212-5ffa-4438-bdbb-99336379579c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Rotate Anchor"",
                    ""type"": ""Value"",
                    ""id"": ""e1d053ce-e086-4baf-bc41-ac90b56b5e89"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Translate Anchor"",
                    ""type"": ""Value"",
                    ""id"": ""3b8345ca-c7f4-40df-bc61-a3a196f98a85"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""85feba5c-9f09-4dc2-925b-e99c339c255a"",
                    ""path"": ""<XRController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Activate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""890d2dbf-f387-4fe2-bdd5-d47f0d9146be"",
                    ""path"": ""<XRController>{RightHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04267c75-7db4-4928-99d7-0329d4035ddd"",
                    ""path"": ""<XRController>{RightHand}/Primary2DAxis"",
                    ""interactions"": ""Sector(directions=1)"",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Teleport Mode Activate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""674a5e37-f0a3-41eb-b27a-3c0176c849a0"",
                    ""path"": ""<XRController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Teleport Mode Activate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd226548-cfd4-4cd6-b033-c45d6872dccd"",
                    ""path"": ""<XRController>{RightHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Teleport Mode Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""621214e6-b61a-406d-a4df-6421476524db"",
                    ""path"": ""<XRController>{RightHand}/Primary2DAxis"",
                    ""interactions"": ""Sector(directions=-1,sweepBehavior=3)"",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Teleport Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40562c8f-c6cd-4d7e-9b73-41750f42a0d1"",
                    ""path"": ""<XRController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Teleport Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4e880a9-e57f-49a8-9357-fd03368d0582"",
                    ""path"": ""<XRController>{RightHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a162ec35-452e-42d4-87da-e7c7a1583f59"",
                    ""path"": ""<XRController>{RightHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c72c17b-b485-4df7-b032-33d2a12d98e6"",
                    ""path"": ""<XRController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cad6bdd0-a90d-48e8-80e7-ba90f01a7533"",
                    ""path"": ""<XRController>{RightHand}/Primary2DAxis"",
                    ""interactions"": ""Sector(directions=12,sweepBehavior=1)"",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae67ffee-f857-466e-a262-6d09a5ac93fd"",
                    ""path"": ""<XRController>{RightHand}/Primary2DAxis"",
                    ""interactions"": ""Sector(directions=2,sweepBehavior=2)"",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44cb2d41-fd70-4612-8486-4241b9f7f44c"",
                    ""path"": ""<XRController>{RightHand}/*"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Haptic Device"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""73c9a4b3-a891-4ea2-bbfe-701290d206a0"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Rotate Anchor"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bdc9ac5b-8f83-49c8-a169-ef2acae88540"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""058429f9-2fc4-4c0f-8ca3-1b9deb1e5a4d"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""760bbb3f-da5e-424f-90ad-4cc428264cbb"",
                    ""path"": ""<XRController>{RightHand}/Primary2DAxis/x"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(min=-1),Invert"",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""83d1ef0d-c408-4b6f-b0ce-f483d628262c"",
                    ""path"": ""<XRController>{RightHand}/Primary2DAxis/x"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(max=1)"",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""d05714a0-0459-4d00-8e84-ec308d3af2a8"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Translate Anchor"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""83e60629-7b69-475a-b867-2f6e530579f5"",
                    ""path"": ""<XRController>{RightHand}/Primary2DAxis/y"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(max=1)"",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Translate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2cc023eb-90fd-4213-8792-229d4f517aa4"",
                    ""path"": ""<XRController>{RightHand}/Primary2DAxis/y"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(min=-1),Invert"",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Translate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c48b9fb3-67d1-4825-a6ca-b2a85d7d10b3"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Translate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""104338a4-1dff-446c-87db-9c1c4fab206e"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Translate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard & Mouse"",
            ""bindingGroup"": ""Keyboard & Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Continuous Move"",
            ""bindingGroup"": ""Continuous Move"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>{LeftHand}"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XRController>{RightHand}"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Generic XR Controller"",
            ""bindingGroup"": ""Generic XR Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>{LeftHand}"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XRController>{RightHand}"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<WMRHMD>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Noncontinuous Move"",
            ""bindingGroup"": ""Noncontinuous Move"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>{LeftHand}"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XRController>{RightHand}"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // GlobalActions
            m_GlobalActions = asset.FindActionMap("GlobalActions", throwIfNotFound: true);
            m_GlobalActions_Quit = m_GlobalActions.FindAction("Quit", throwIfNotFound: true);
            m_GlobalActions_ToggleCursor = m_GlobalActions.FindAction("Toggle Cursor", throwIfNotFound: true);
            // FpsActions
            m_FpsActions = asset.FindActionMap("FpsActions", throwIfNotFound: true);
            m_FpsActions_Movement = m_FpsActions.FindAction("Movement", throwIfNotFound: true);
            m_FpsActions_Look = m_FpsActions.FindAction("Look", throwIfNotFound: true);
            m_FpsActions_CameraHeight = m_FpsActions.FindAction("Camera Height", throwIfNotFound: true);
            m_FpsActions_Interact = m_FpsActions.FindAction("Interact", throwIfNotFound: true);
            m_FpsActions_Sprint = m_FpsActions.FindAction("Sprint", throwIfNotFound: true);
            m_FpsActions_Jump = m_FpsActions.FindAction("Jump", throwIfNotFound: true);
            m_FpsActions_ToggleEditMode = m_FpsActions.FindAction("Toggle EditMode", throwIfNotFound: true);
            // FpsEditActions
            m_FpsEditActions = asset.FindActionMap("FpsEditActions", throwIfNotFound: true);
            m_FpsEditActions_Move = m_FpsEditActions.FindAction("Move", throwIfNotFound: true);
            m_FpsEditActions_Rotate = m_FpsEditActions.FindAction("Rotate", throwIfNotFound: true);
            m_FpsEditActions_Grab = m_FpsEditActions.FindAction("Grab", throwIfNotFound: true);
            // CylActions
            m_CylActions = asset.FindActionMap("CylActions", throwIfNotFound: true);
            m_CylActions_NavigationVertical = m_CylActions.FindAction("Navigation Vertical", throwIfNotFound: true);
            m_CylActions_NavigationHorizontal = m_CylActions.FindAction("Navigation Horizontal", throwIfNotFound: true);
            m_CylActions_Look = m_CylActions.FindAction("Look", throwIfNotFound: true);
            m_CylActions_CameraHeight = m_CylActions.FindAction("Camera Height", throwIfNotFound: true);
            m_CylActions_Interact = m_CylActions.FindAction("Interact", throwIfNotFound: true);
            // XR HMD
            m_XRHMD = asset.FindActionMap("XR HMD", throwIfNotFound: true);
            m_XRHMD_Position = m_XRHMD.FindAction("Position", throwIfNotFound: true);
            m_XRHMD_Rotation = m_XRHMD.FindAction("Rotation", throwIfNotFound: true);
            // XR LeftHand
            m_XRLeftHand = asset.FindActionMap("XR LeftHand", throwIfNotFound: true);
            m_XRLeftHand_Position = m_XRLeftHand.FindAction("Position", throwIfNotFound: true);
            m_XRLeftHand_Rotation = m_XRLeftHand.FindAction("Rotation", throwIfNotFound: true);
            m_XRLeftHand_Select = m_XRLeftHand.FindAction("Select", throwIfNotFound: true);
            m_XRLeftHand_Activate = m_XRLeftHand.FindAction("Activate", throwIfNotFound: true);
            m_XRLeftHand_UIPress = m_XRLeftHand.FindAction("UI Press", throwIfNotFound: true);
            m_XRLeftHand_HapticDevice = m_XRLeftHand.FindAction("Haptic Device", throwIfNotFound: true);
            m_XRLeftHand_TeleportSelect = m_XRLeftHand.FindAction("Teleport Select", throwIfNotFound: true);
            m_XRLeftHand_TeleportModeActivate = m_XRLeftHand.FindAction("Teleport Mode Activate", throwIfNotFound: true);
            m_XRLeftHand_TeleportModeCancel = m_XRLeftHand.FindAction("Teleport Mode Cancel", throwIfNotFound: true);
            m_XRLeftHand_Turn = m_XRLeftHand.FindAction("Turn", throwIfNotFound: true);
            m_XRLeftHand_Move = m_XRLeftHand.FindAction("Move", throwIfNotFound: true);
            m_XRLeftHand_RotateAnchor = m_XRLeftHand.FindAction("Rotate Anchor", throwIfNotFound: true);
            m_XRLeftHand_TranslateAnchor = m_XRLeftHand.FindAction("Translate Anchor", throwIfNotFound: true);
            // XR RightHand
            m_XRRightHand = asset.FindActionMap("XR RightHand", throwIfNotFound: true);
            m_XRRightHand_Position = m_XRRightHand.FindAction("Position", throwIfNotFound: true);
            m_XRRightHand_Rotation = m_XRRightHand.FindAction("Rotation", throwIfNotFound: true);
            m_XRRightHand_Select = m_XRRightHand.FindAction("Select", throwIfNotFound: true);
            m_XRRightHand_Activate = m_XRRightHand.FindAction("Activate", throwIfNotFound: true);
            m_XRRightHand_UIPress = m_XRRightHand.FindAction("UI Press", throwIfNotFound: true);
            m_XRRightHand_HapticDevice = m_XRRightHand.FindAction("Haptic Device", throwIfNotFound: true);
            m_XRRightHand_TeleportSelect = m_XRRightHand.FindAction("Teleport Select", throwIfNotFound: true);
            m_XRRightHand_TeleportModeActivate = m_XRRightHand.FindAction("Teleport Mode Activate", throwIfNotFound: true);
            m_XRRightHand_TeleportModeCancel = m_XRRightHand.FindAction("Teleport Mode Cancel", throwIfNotFound: true);
            m_XRRightHand_Turn = m_XRRightHand.FindAction("Turn", throwIfNotFound: true);
            m_XRRightHand_Move = m_XRRightHand.FindAction("Move", throwIfNotFound: true);
            m_XRRightHand_RotateAnchor = m_XRRightHand.FindAction("Rotate Anchor", throwIfNotFound: true);
            m_XRRightHand_TranslateAnchor = m_XRRightHand.FindAction("Translate Anchor", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // GlobalActions
        private readonly InputActionMap m_GlobalActions;
        private IGlobalActionsActions m_GlobalActionsActionsCallbackInterface;
        private readonly InputAction m_GlobalActions_Quit;
        private readonly InputAction m_GlobalActions_ToggleCursor;
        public struct GlobalActionsActions
        {
            private @InputActions m_Wrapper;
            public GlobalActionsActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Quit => m_Wrapper.m_GlobalActions_Quit;
            public InputAction @ToggleCursor => m_Wrapper.m_GlobalActions_ToggleCursor;
            public InputActionMap Get() { return m_Wrapper.m_GlobalActions; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(GlobalActionsActions set) { return set.Get(); }
            public void SetCallbacks(IGlobalActionsActions instance)
            {
                if (m_Wrapper.m_GlobalActionsActionsCallbackInterface != null)
                {
                    @Quit.started -= m_Wrapper.m_GlobalActionsActionsCallbackInterface.OnQuit;
                    @Quit.performed -= m_Wrapper.m_GlobalActionsActionsCallbackInterface.OnQuit;
                    @Quit.canceled -= m_Wrapper.m_GlobalActionsActionsCallbackInterface.OnQuit;
                    @ToggleCursor.started -= m_Wrapper.m_GlobalActionsActionsCallbackInterface.OnToggleCursor;
                    @ToggleCursor.performed -= m_Wrapper.m_GlobalActionsActionsCallbackInterface.OnToggleCursor;
                    @ToggleCursor.canceled -= m_Wrapper.m_GlobalActionsActionsCallbackInterface.OnToggleCursor;
                }
                m_Wrapper.m_GlobalActionsActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Quit.started += instance.OnQuit;
                    @Quit.performed += instance.OnQuit;
                    @Quit.canceled += instance.OnQuit;
                    @ToggleCursor.started += instance.OnToggleCursor;
                    @ToggleCursor.performed += instance.OnToggleCursor;
                    @ToggleCursor.canceled += instance.OnToggleCursor;
                }
            }
        }
        public GlobalActionsActions @GlobalActions => new GlobalActionsActions(this);

        // FpsActions
        private readonly InputActionMap m_FpsActions;
        private IFpsActionsActions m_FpsActionsActionsCallbackInterface;
        private readonly InputAction m_FpsActions_Movement;
        private readonly InputAction m_FpsActions_Look;
        private readonly InputAction m_FpsActions_CameraHeight;
        private readonly InputAction m_FpsActions_Interact;
        private readonly InputAction m_FpsActions_Sprint;
        private readonly InputAction m_FpsActions_Jump;
        private readonly InputAction m_FpsActions_ToggleEditMode;
        public struct FpsActionsActions
        {
            private @InputActions m_Wrapper;
            public FpsActionsActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Movement => m_Wrapper.m_FpsActions_Movement;
            public InputAction @Look => m_Wrapper.m_FpsActions_Look;
            public InputAction @CameraHeight => m_Wrapper.m_FpsActions_CameraHeight;
            public InputAction @Interact => m_Wrapper.m_FpsActions_Interact;
            public InputAction @Sprint => m_Wrapper.m_FpsActions_Sprint;
            public InputAction @Jump => m_Wrapper.m_FpsActions_Jump;
            public InputAction @ToggleEditMode => m_Wrapper.m_FpsActions_ToggleEditMode;
            public InputActionMap Get() { return m_Wrapper.m_FpsActions; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(FpsActionsActions set) { return set.Get(); }
            public void SetCallbacks(IFpsActionsActions instance)
            {
                if (m_Wrapper.m_FpsActionsActionsCallbackInterface != null)
                {
                    @Movement.started -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnMovement;
                    @Movement.performed -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnMovement;
                    @Movement.canceled -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnMovement;
                    @Look.started -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnLook;
                    @Look.performed -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnLook;
                    @Look.canceled -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnLook;
                    @CameraHeight.started -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnCameraHeight;
                    @CameraHeight.performed -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnCameraHeight;
                    @CameraHeight.canceled -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnCameraHeight;
                    @Interact.started -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnInteract;
                    @Interact.performed -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnInteract;
                    @Interact.canceled -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnInteract;
                    @Sprint.started -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnSprint;
                    @Sprint.performed -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnSprint;
                    @Sprint.canceled -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnSprint;
                    @Jump.started -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnJump;
                    @Jump.performed -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnJump;
                    @Jump.canceled -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnJump;
                    @ToggleEditMode.started -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnToggleEditMode;
                    @ToggleEditMode.performed -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnToggleEditMode;
                    @ToggleEditMode.canceled -= m_Wrapper.m_FpsActionsActionsCallbackInterface.OnToggleEditMode;
                }
                m_Wrapper.m_FpsActionsActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Movement.started += instance.OnMovement;
                    @Movement.performed += instance.OnMovement;
                    @Movement.canceled += instance.OnMovement;
                    @Look.started += instance.OnLook;
                    @Look.performed += instance.OnLook;
                    @Look.canceled += instance.OnLook;
                    @CameraHeight.started += instance.OnCameraHeight;
                    @CameraHeight.performed += instance.OnCameraHeight;
                    @CameraHeight.canceled += instance.OnCameraHeight;
                    @Interact.started += instance.OnInteract;
                    @Interact.performed += instance.OnInteract;
                    @Interact.canceled += instance.OnInteract;
                    @Sprint.started += instance.OnSprint;
                    @Sprint.performed += instance.OnSprint;
                    @Sprint.canceled += instance.OnSprint;
                    @Jump.started += instance.OnJump;
                    @Jump.performed += instance.OnJump;
                    @Jump.canceled += instance.OnJump;
                    @ToggleEditMode.started += instance.OnToggleEditMode;
                    @ToggleEditMode.performed += instance.OnToggleEditMode;
                    @ToggleEditMode.canceled += instance.OnToggleEditMode;
                }
            }
        }
        public FpsActionsActions @FpsActions => new FpsActionsActions(this);

        // FpsEditActions
        private readonly InputActionMap m_FpsEditActions;
        private IFpsEditActionsActions m_FpsEditActionsActionsCallbackInterface;
        private readonly InputAction m_FpsEditActions_Move;
        private readonly InputAction m_FpsEditActions_Rotate;
        private readonly InputAction m_FpsEditActions_Grab;
        public struct FpsEditActionsActions
        {
            private @InputActions m_Wrapper;
            public FpsEditActionsActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_FpsEditActions_Move;
            public InputAction @Rotate => m_Wrapper.m_FpsEditActions_Rotate;
            public InputAction @Grab => m_Wrapper.m_FpsEditActions_Grab;
            public InputActionMap Get() { return m_Wrapper.m_FpsEditActions; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(FpsEditActionsActions set) { return set.Get(); }
            public void SetCallbacks(IFpsEditActionsActions instance)
            {
                if (m_Wrapper.m_FpsEditActionsActionsCallbackInterface != null)
                {
                    @Move.started -= m_Wrapper.m_FpsEditActionsActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_FpsEditActionsActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_FpsEditActionsActionsCallbackInterface.OnMove;
                    @Rotate.started -= m_Wrapper.m_FpsEditActionsActionsCallbackInterface.OnRotate;
                    @Rotate.performed -= m_Wrapper.m_FpsEditActionsActionsCallbackInterface.OnRotate;
                    @Rotate.canceled -= m_Wrapper.m_FpsEditActionsActionsCallbackInterface.OnRotate;
                    @Grab.started -= m_Wrapper.m_FpsEditActionsActionsCallbackInterface.OnGrab;
                    @Grab.performed -= m_Wrapper.m_FpsEditActionsActionsCallbackInterface.OnGrab;
                    @Grab.canceled -= m_Wrapper.m_FpsEditActionsActionsCallbackInterface.OnGrab;
                }
                m_Wrapper.m_FpsEditActionsActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                    @Rotate.started += instance.OnRotate;
                    @Rotate.performed += instance.OnRotate;
                    @Rotate.canceled += instance.OnRotate;
                    @Grab.started += instance.OnGrab;
                    @Grab.performed += instance.OnGrab;
                    @Grab.canceled += instance.OnGrab;
                }
            }
        }
        public FpsEditActionsActions @FpsEditActions => new FpsEditActionsActions(this);

        // CylActions
        private readonly InputActionMap m_CylActions;
        private ICylActionsActions m_CylActionsActionsCallbackInterface;
        private readonly InputAction m_CylActions_NavigationVertical;
        private readonly InputAction m_CylActions_NavigationHorizontal;
        private readonly InputAction m_CylActions_Look;
        private readonly InputAction m_CylActions_CameraHeight;
        private readonly InputAction m_CylActions_Interact;
        public struct CylActionsActions
        {
            private @InputActions m_Wrapper;
            public CylActionsActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @NavigationVertical => m_Wrapper.m_CylActions_NavigationVertical;
            public InputAction @NavigationHorizontal => m_Wrapper.m_CylActions_NavigationHorizontal;
            public InputAction @Look => m_Wrapper.m_CylActions_Look;
            public InputAction @CameraHeight => m_Wrapper.m_CylActions_CameraHeight;
            public InputAction @Interact => m_Wrapper.m_CylActions_Interact;
            public InputActionMap Get() { return m_Wrapper.m_CylActions; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(CylActionsActions set) { return set.Get(); }
            public void SetCallbacks(ICylActionsActions instance)
            {
                if (m_Wrapper.m_CylActionsActionsCallbackInterface != null)
                {
                    @NavigationVertical.started -= m_Wrapper.m_CylActionsActionsCallbackInterface.OnNavigationVertical;
                    @NavigationVertical.performed -= m_Wrapper.m_CylActionsActionsCallbackInterface.OnNavigationVertical;
                    @NavigationVertical.canceled -= m_Wrapper.m_CylActionsActionsCallbackInterface.OnNavigationVertical;
                    @NavigationHorizontal.started -= m_Wrapper.m_CylActionsActionsCallbackInterface.OnNavigationHorizontal;
                    @NavigationHorizontal.performed -= m_Wrapper.m_CylActionsActionsCallbackInterface.OnNavigationHorizontal;
                    @NavigationHorizontal.canceled -= m_Wrapper.m_CylActionsActionsCallbackInterface.OnNavigationHorizontal;
                    @Look.started -= m_Wrapper.m_CylActionsActionsCallbackInterface.OnLook;
                    @Look.performed -= m_Wrapper.m_CylActionsActionsCallbackInterface.OnLook;
                    @Look.canceled -= m_Wrapper.m_CylActionsActionsCallbackInterface.OnLook;
                    @CameraHeight.started -= m_Wrapper.m_CylActionsActionsCallbackInterface.OnCameraHeight;
                    @CameraHeight.performed -= m_Wrapper.m_CylActionsActionsCallbackInterface.OnCameraHeight;
                    @CameraHeight.canceled -= m_Wrapper.m_CylActionsActionsCallbackInterface.OnCameraHeight;
                    @Interact.started -= m_Wrapper.m_CylActionsActionsCallbackInterface.OnInteract;
                    @Interact.performed -= m_Wrapper.m_CylActionsActionsCallbackInterface.OnInteract;
                    @Interact.canceled -= m_Wrapper.m_CylActionsActionsCallbackInterface.OnInteract;
                }
                m_Wrapper.m_CylActionsActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @NavigationVertical.started += instance.OnNavigationVertical;
                    @NavigationVertical.performed += instance.OnNavigationVertical;
                    @NavigationVertical.canceled += instance.OnNavigationVertical;
                    @NavigationHorizontal.started += instance.OnNavigationHorizontal;
                    @NavigationHorizontal.performed += instance.OnNavigationHorizontal;
                    @NavigationHorizontal.canceled += instance.OnNavigationHorizontal;
                    @Look.started += instance.OnLook;
                    @Look.performed += instance.OnLook;
                    @Look.canceled += instance.OnLook;
                    @CameraHeight.started += instance.OnCameraHeight;
                    @CameraHeight.performed += instance.OnCameraHeight;
                    @CameraHeight.canceled += instance.OnCameraHeight;
                    @Interact.started += instance.OnInteract;
                    @Interact.performed += instance.OnInteract;
                    @Interact.canceled += instance.OnInteract;
                }
            }
        }
        public CylActionsActions @CylActions => new CylActionsActions(this);

        // XR HMD
        private readonly InputActionMap m_XRHMD;
        private IXRHMDActions m_XRHMDActionsCallbackInterface;
        private readonly InputAction m_XRHMD_Position;
        private readonly InputAction m_XRHMD_Rotation;
        public struct XRHMDActions
        {
            private @InputActions m_Wrapper;
            public XRHMDActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Position => m_Wrapper.m_XRHMD_Position;
            public InputAction @Rotation => m_Wrapper.m_XRHMD_Rotation;
            public InputActionMap Get() { return m_Wrapper.m_XRHMD; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(XRHMDActions set) { return set.Get(); }
            public void SetCallbacks(IXRHMDActions instance)
            {
                if (m_Wrapper.m_XRHMDActionsCallbackInterface != null)
                {
                    @Position.started -= m_Wrapper.m_XRHMDActionsCallbackInterface.OnPosition;
                    @Position.performed -= m_Wrapper.m_XRHMDActionsCallbackInterface.OnPosition;
                    @Position.canceled -= m_Wrapper.m_XRHMDActionsCallbackInterface.OnPosition;
                    @Rotation.started -= m_Wrapper.m_XRHMDActionsCallbackInterface.OnRotation;
                    @Rotation.performed -= m_Wrapper.m_XRHMDActionsCallbackInterface.OnRotation;
                    @Rotation.canceled -= m_Wrapper.m_XRHMDActionsCallbackInterface.OnRotation;
                }
                m_Wrapper.m_XRHMDActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Position.started += instance.OnPosition;
                    @Position.performed += instance.OnPosition;
                    @Position.canceled += instance.OnPosition;
                    @Rotation.started += instance.OnRotation;
                    @Rotation.performed += instance.OnRotation;
                    @Rotation.canceled += instance.OnRotation;
                }
            }
        }
        public XRHMDActions @XRHMD => new XRHMDActions(this);

        // XR LeftHand
        private readonly InputActionMap m_XRLeftHand;
        private IXRLeftHandActions m_XRLeftHandActionsCallbackInterface;
        private readonly InputAction m_XRLeftHand_Position;
        private readonly InputAction m_XRLeftHand_Rotation;
        private readonly InputAction m_XRLeftHand_Select;
        private readonly InputAction m_XRLeftHand_Activate;
        private readonly InputAction m_XRLeftHand_UIPress;
        private readonly InputAction m_XRLeftHand_HapticDevice;
        private readonly InputAction m_XRLeftHand_TeleportSelect;
        private readonly InputAction m_XRLeftHand_TeleportModeActivate;
        private readonly InputAction m_XRLeftHand_TeleportModeCancel;
        private readonly InputAction m_XRLeftHand_Turn;
        private readonly InputAction m_XRLeftHand_Move;
        private readonly InputAction m_XRLeftHand_RotateAnchor;
        private readonly InputAction m_XRLeftHand_TranslateAnchor;
        public struct XRLeftHandActions
        {
            private @InputActions m_Wrapper;
            public XRLeftHandActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Position => m_Wrapper.m_XRLeftHand_Position;
            public InputAction @Rotation => m_Wrapper.m_XRLeftHand_Rotation;
            public InputAction @Select => m_Wrapper.m_XRLeftHand_Select;
            public InputAction @Activate => m_Wrapper.m_XRLeftHand_Activate;
            public InputAction @UIPress => m_Wrapper.m_XRLeftHand_UIPress;
            public InputAction @HapticDevice => m_Wrapper.m_XRLeftHand_HapticDevice;
            public InputAction @TeleportSelect => m_Wrapper.m_XRLeftHand_TeleportSelect;
            public InputAction @TeleportModeActivate => m_Wrapper.m_XRLeftHand_TeleportModeActivate;
            public InputAction @TeleportModeCancel => m_Wrapper.m_XRLeftHand_TeleportModeCancel;
            public InputAction @Turn => m_Wrapper.m_XRLeftHand_Turn;
            public InputAction @Move => m_Wrapper.m_XRLeftHand_Move;
            public InputAction @RotateAnchor => m_Wrapper.m_XRLeftHand_RotateAnchor;
            public InputAction @TranslateAnchor => m_Wrapper.m_XRLeftHand_TranslateAnchor;
            public InputActionMap Get() { return m_Wrapper.m_XRLeftHand; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(XRLeftHandActions set) { return set.Get(); }
            public void SetCallbacks(IXRLeftHandActions instance)
            {
                if (m_Wrapper.m_XRLeftHandActionsCallbackInterface != null)
                {
                    @Position.started -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnPosition;
                    @Position.performed -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnPosition;
                    @Position.canceled -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnPosition;
                    @Rotation.started -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnRotation;
                    @Rotation.performed -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnRotation;
                    @Rotation.canceled -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnRotation;
                    @Select.started -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnSelect;
                    @Select.performed -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnSelect;
                    @Select.canceled -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnSelect;
                    @Activate.started -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnActivate;
                    @Activate.performed -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnActivate;
                    @Activate.canceled -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnActivate;
                    @UIPress.started -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnUIPress;
                    @UIPress.performed -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnUIPress;
                    @UIPress.canceled -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnUIPress;
                    @HapticDevice.started -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnHapticDevice;
                    @HapticDevice.performed -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnHapticDevice;
                    @HapticDevice.canceled -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnHapticDevice;
                    @TeleportSelect.started -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnTeleportSelect;
                    @TeleportSelect.performed -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnTeleportSelect;
                    @TeleportSelect.canceled -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnTeleportSelect;
                    @TeleportModeActivate.started -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnTeleportModeActivate;
                    @TeleportModeActivate.performed -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnTeleportModeActivate;
                    @TeleportModeActivate.canceled -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnTeleportModeActivate;
                    @TeleportModeCancel.started -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnTeleportModeCancel;
                    @TeleportModeCancel.performed -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnTeleportModeCancel;
                    @TeleportModeCancel.canceled -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnTeleportModeCancel;
                    @Turn.started -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnTurn;
                    @Turn.performed -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnTurn;
                    @Turn.canceled -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnTurn;
                    @Move.started -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnMove;
                    @RotateAnchor.started -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnRotateAnchor;
                    @RotateAnchor.performed -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnRotateAnchor;
                    @RotateAnchor.canceled -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnRotateAnchor;
                    @TranslateAnchor.started -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnTranslateAnchor;
                    @TranslateAnchor.performed -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnTranslateAnchor;
                    @TranslateAnchor.canceled -= m_Wrapper.m_XRLeftHandActionsCallbackInterface.OnTranslateAnchor;
                }
                m_Wrapper.m_XRLeftHandActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Position.started += instance.OnPosition;
                    @Position.performed += instance.OnPosition;
                    @Position.canceled += instance.OnPosition;
                    @Rotation.started += instance.OnRotation;
                    @Rotation.performed += instance.OnRotation;
                    @Rotation.canceled += instance.OnRotation;
                    @Select.started += instance.OnSelect;
                    @Select.performed += instance.OnSelect;
                    @Select.canceled += instance.OnSelect;
                    @Activate.started += instance.OnActivate;
                    @Activate.performed += instance.OnActivate;
                    @Activate.canceled += instance.OnActivate;
                    @UIPress.started += instance.OnUIPress;
                    @UIPress.performed += instance.OnUIPress;
                    @UIPress.canceled += instance.OnUIPress;
                    @HapticDevice.started += instance.OnHapticDevice;
                    @HapticDevice.performed += instance.OnHapticDevice;
                    @HapticDevice.canceled += instance.OnHapticDevice;
                    @TeleportSelect.started += instance.OnTeleportSelect;
                    @TeleportSelect.performed += instance.OnTeleportSelect;
                    @TeleportSelect.canceled += instance.OnTeleportSelect;
                    @TeleportModeActivate.started += instance.OnTeleportModeActivate;
                    @TeleportModeActivate.performed += instance.OnTeleportModeActivate;
                    @TeleportModeActivate.canceled += instance.OnTeleportModeActivate;
                    @TeleportModeCancel.started += instance.OnTeleportModeCancel;
                    @TeleportModeCancel.performed += instance.OnTeleportModeCancel;
                    @TeleportModeCancel.canceled += instance.OnTeleportModeCancel;
                    @Turn.started += instance.OnTurn;
                    @Turn.performed += instance.OnTurn;
                    @Turn.canceled += instance.OnTurn;
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                    @RotateAnchor.started += instance.OnRotateAnchor;
                    @RotateAnchor.performed += instance.OnRotateAnchor;
                    @RotateAnchor.canceled += instance.OnRotateAnchor;
                    @TranslateAnchor.started += instance.OnTranslateAnchor;
                    @TranslateAnchor.performed += instance.OnTranslateAnchor;
                    @TranslateAnchor.canceled += instance.OnTranslateAnchor;
                }
            }
        }
        public XRLeftHandActions @XRLeftHand => new XRLeftHandActions(this);

        // XR RightHand
        private readonly InputActionMap m_XRRightHand;
        private IXRRightHandActions m_XRRightHandActionsCallbackInterface;
        private readonly InputAction m_XRRightHand_Position;
        private readonly InputAction m_XRRightHand_Rotation;
        private readonly InputAction m_XRRightHand_Select;
        private readonly InputAction m_XRRightHand_Activate;
        private readonly InputAction m_XRRightHand_UIPress;
        private readonly InputAction m_XRRightHand_HapticDevice;
        private readonly InputAction m_XRRightHand_TeleportSelect;
        private readonly InputAction m_XRRightHand_TeleportModeActivate;
        private readonly InputAction m_XRRightHand_TeleportModeCancel;
        private readonly InputAction m_XRRightHand_Turn;
        private readonly InputAction m_XRRightHand_Move;
        private readonly InputAction m_XRRightHand_RotateAnchor;
        private readonly InputAction m_XRRightHand_TranslateAnchor;
        public struct XRRightHandActions
        {
            private @InputActions m_Wrapper;
            public XRRightHandActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Position => m_Wrapper.m_XRRightHand_Position;
            public InputAction @Rotation => m_Wrapper.m_XRRightHand_Rotation;
            public InputAction @Select => m_Wrapper.m_XRRightHand_Select;
            public InputAction @Activate => m_Wrapper.m_XRRightHand_Activate;
            public InputAction @UIPress => m_Wrapper.m_XRRightHand_UIPress;
            public InputAction @HapticDevice => m_Wrapper.m_XRRightHand_HapticDevice;
            public InputAction @TeleportSelect => m_Wrapper.m_XRRightHand_TeleportSelect;
            public InputAction @TeleportModeActivate => m_Wrapper.m_XRRightHand_TeleportModeActivate;
            public InputAction @TeleportModeCancel => m_Wrapper.m_XRRightHand_TeleportModeCancel;
            public InputAction @Turn => m_Wrapper.m_XRRightHand_Turn;
            public InputAction @Move => m_Wrapper.m_XRRightHand_Move;
            public InputAction @RotateAnchor => m_Wrapper.m_XRRightHand_RotateAnchor;
            public InputAction @TranslateAnchor => m_Wrapper.m_XRRightHand_TranslateAnchor;
            public InputActionMap Get() { return m_Wrapper.m_XRRightHand; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(XRRightHandActions set) { return set.Get(); }
            public void SetCallbacks(IXRRightHandActions instance)
            {
                if (m_Wrapper.m_XRRightHandActionsCallbackInterface != null)
                {
                    @Position.started -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnPosition;
                    @Position.performed -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnPosition;
                    @Position.canceled -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnPosition;
                    @Rotation.started -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnRotation;
                    @Rotation.performed -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnRotation;
                    @Rotation.canceled -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnRotation;
                    @Select.started -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnSelect;
                    @Select.performed -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnSelect;
                    @Select.canceled -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnSelect;
                    @Activate.started -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnActivate;
                    @Activate.performed -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnActivate;
                    @Activate.canceled -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnActivate;
                    @UIPress.started -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnUIPress;
                    @UIPress.performed -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnUIPress;
                    @UIPress.canceled -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnUIPress;
                    @HapticDevice.started -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnHapticDevice;
                    @HapticDevice.performed -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnHapticDevice;
                    @HapticDevice.canceled -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnHapticDevice;
                    @TeleportSelect.started -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnTeleportSelect;
                    @TeleportSelect.performed -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnTeleportSelect;
                    @TeleportSelect.canceled -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnTeleportSelect;
                    @TeleportModeActivate.started -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnTeleportModeActivate;
                    @TeleportModeActivate.performed -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnTeleportModeActivate;
                    @TeleportModeActivate.canceled -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnTeleportModeActivate;
                    @TeleportModeCancel.started -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnTeleportModeCancel;
                    @TeleportModeCancel.performed -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnTeleportModeCancel;
                    @TeleportModeCancel.canceled -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnTeleportModeCancel;
                    @Turn.started -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnTurn;
                    @Turn.performed -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnTurn;
                    @Turn.canceled -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnTurn;
                    @Move.started -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnMove;
                    @RotateAnchor.started -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnRotateAnchor;
                    @RotateAnchor.performed -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnRotateAnchor;
                    @RotateAnchor.canceled -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnRotateAnchor;
                    @TranslateAnchor.started -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnTranslateAnchor;
                    @TranslateAnchor.performed -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnTranslateAnchor;
                    @TranslateAnchor.canceled -= m_Wrapper.m_XRRightHandActionsCallbackInterface.OnTranslateAnchor;
                }
                m_Wrapper.m_XRRightHandActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Position.started += instance.OnPosition;
                    @Position.performed += instance.OnPosition;
                    @Position.canceled += instance.OnPosition;
                    @Rotation.started += instance.OnRotation;
                    @Rotation.performed += instance.OnRotation;
                    @Rotation.canceled += instance.OnRotation;
                    @Select.started += instance.OnSelect;
                    @Select.performed += instance.OnSelect;
                    @Select.canceled += instance.OnSelect;
                    @Activate.started += instance.OnActivate;
                    @Activate.performed += instance.OnActivate;
                    @Activate.canceled += instance.OnActivate;
                    @UIPress.started += instance.OnUIPress;
                    @UIPress.performed += instance.OnUIPress;
                    @UIPress.canceled += instance.OnUIPress;
                    @HapticDevice.started += instance.OnHapticDevice;
                    @HapticDevice.performed += instance.OnHapticDevice;
                    @HapticDevice.canceled += instance.OnHapticDevice;
                    @TeleportSelect.started += instance.OnTeleportSelect;
                    @TeleportSelect.performed += instance.OnTeleportSelect;
                    @TeleportSelect.canceled += instance.OnTeleportSelect;
                    @TeleportModeActivate.started += instance.OnTeleportModeActivate;
                    @TeleportModeActivate.performed += instance.OnTeleportModeActivate;
                    @TeleportModeActivate.canceled += instance.OnTeleportModeActivate;
                    @TeleportModeCancel.started += instance.OnTeleportModeCancel;
                    @TeleportModeCancel.performed += instance.OnTeleportModeCancel;
                    @TeleportModeCancel.canceled += instance.OnTeleportModeCancel;
                    @Turn.started += instance.OnTurn;
                    @Turn.performed += instance.OnTurn;
                    @Turn.canceled += instance.OnTurn;
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                    @RotateAnchor.started += instance.OnRotateAnchor;
                    @RotateAnchor.performed += instance.OnRotateAnchor;
                    @RotateAnchor.canceled += instance.OnRotateAnchor;
                    @TranslateAnchor.started += instance.OnTranslateAnchor;
                    @TranslateAnchor.performed += instance.OnTranslateAnchor;
                    @TranslateAnchor.canceled += instance.OnTranslateAnchor;
                }
            }
        }
        public XRRightHandActions @XRRightHand => new XRRightHandActions(this);
        private int m_KeyboardMouseSchemeIndex = -1;
        public InputControlScheme KeyboardMouseScheme
        {
            get
            {
                if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard & Mouse");
                return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
            }
        }
        private int m_GamepadSchemeIndex = -1;
        public InputControlScheme GamepadScheme
        {
            get
            {
                if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
                return asset.controlSchemes[m_GamepadSchemeIndex];
            }
        }
        private int m_ContinuousMoveSchemeIndex = -1;
        public InputControlScheme ContinuousMoveScheme
        {
            get
            {
                if (m_ContinuousMoveSchemeIndex == -1) m_ContinuousMoveSchemeIndex = asset.FindControlSchemeIndex("Continuous Move");
                return asset.controlSchemes[m_ContinuousMoveSchemeIndex];
            }
        }
        private int m_GenericXRControllerSchemeIndex = -1;
        public InputControlScheme GenericXRControllerScheme
        {
            get
            {
                if (m_GenericXRControllerSchemeIndex == -1) m_GenericXRControllerSchemeIndex = asset.FindControlSchemeIndex("Generic XR Controller");
                return asset.controlSchemes[m_GenericXRControllerSchemeIndex];
            }
        }
        private int m_NoncontinuousMoveSchemeIndex = -1;
        public InputControlScheme NoncontinuousMoveScheme
        {
            get
            {
                if (m_NoncontinuousMoveSchemeIndex == -1) m_NoncontinuousMoveSchemeIndex = asset.FindControlSchemeIndex("Noncontinuous Move");
                return asset.controlSchemes[m_NoncontinuousMoveSchemeIndex];
            }
        }
        public interface IGlobalActionsActions
        {
            void OnQuit(InputAction.CallbackContext context);
            void OnToggleCursor(InputAction.CallbackContext context);
        }
        public interface IFpsActionsActions
        {
            void OnMovement(InputAction.CallbackContext context);
            void OnLook(InputAction.CallbackContext context);
            void OnCameraHeight(InputAction.CallbackContext context);
            void OnInteract(InputAction.CallbackContext context);
            void OnSprint(InputAction.CallbackContext context);
            void OnJump(InputAction.CallbackContext context);
            void OnToggleEditMode(InputAction.CallbackContext context);
        }
        public interface IFpsEditActionsActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnRotate(InputAction.CallbackContext context);
            void OnGrab(InputAction.CallbackContext context);
        }
        public interface ICylActionsActions
        {
            void OnNavigationVertical(InputAction.CallbackContext context);
            void OnNavigationHorizontal(InputAction.CallbackContext context);
            void OnLook(InputAction.CallbackContext context);
            void OnCameraHeight(InputAction.CallbackContext context);
            void OnInteract(InputAction.CallbackContext context);
        }
        public interface IXRHMDActions
        {
            void OnPosition(InputAction.CallbackContext context);
            void OnRotation(InputAction.CallbackContext context);
        }
        public interface IXRLeftHandActions
        {
            void OnPosition(InputAction.CallbackContext context);
            void OnRotation(InputAction.CallbackContext context);
            void OnSelect(InputAction.CallbackContext context);
            void OnActivate(InputAction.CallbackContext context);
            void OnUIPress(InputAction.CallbackContext context);
            void OnHapticDevice(InputAction.CallbackContext context);
            void OnTeleportSelect(InputAction.CallbackContext context);
            void OnTeleportModeActivate(InputAction.CallbackContext context);
            void OnTeleportModeCancel(InputAction.CallbackContext context);
            void OnTurn(InputAction.CallbackContext context);
            void OnMove(InputAction.CallbackContext context);
            void OnRotateAnchor(InputAction.CallbackContext context);
            void OnTranslateAnchor(InputAction.CallbackContext context);
        }
        public interface IXRRightHandActions
        {
            void OnPosition(InputAction.CallbackContext context);
            void OnRotation(InputAction.CallbackContext context);
            void OnSelect(InputAction.CallbackContext context);
            void OnActivate(InputAction.CallbackContext context);
            void OnUIPress(InputAction.CallbackContext context);
            void OnHapticDevice(InputAction.CallbackContext context);
            void OnTeleportSelect(InputAction.CallbackContext context);
            void OnTeleportModeActivate(InputAction.CallbackContext context);
            void OnTeleportModeCancel(InputAction.CallbackContext context);
            void OnTurn(InputAction.CallbackContext context);
            void OnMove(InputAction.CallbackContext context);
            void OnRotateAnchor(InputAction.CallbackContext context);
            void OnTranslateAnchor(InputAction.CallbackContext context);
        }
    }
}
